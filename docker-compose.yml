version: '3.8'

services:
  bot_image:
    env_file:
      - .env
    networks:
      - botnet
    image: bot_image
    depends_on:
      - db_image
      - db_repl_image

  db_image:
    env_file:
      - .env
    networks:
      - botnet
    restart: always
    # user: postgres
    healthcheck:
      test: 'pg_isready -U postgres --dbname=bot_db'
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
      - 2334:22
    image: db_image

  db_repl_image:
    env_file:
      - .env
    networks:
      - botnet
    restart: always
    healthcheck:
      test: 'pg_isready -U postgres --dbname=bot_db'
      interval: 10s
      timeout: 5s
      retries: 5
    image: db_repl_image
    ports:
      - 5433:5432
    depends_on:
      - db_image

networks:
  botnet:
    ipam:
      config:
        - subnet: 172.10.1.0/24


# version: '3'
# services:
#   bot_image:
#     networks:
#       - botnet
#     build: ./bot
#     depends_on:
#       - db_image
#       - db_repl_image
        
#   db_image:
#     networks:
#       - botnet
#     build: ./db
#     ports:
#       - '5432:5432'
#       - '2334:22'
#     volumes:
#       - data-volume:/var/lib/postgresql/data:z
#     environment:
#       - POSTGRES_DB=bot_db
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=Qq12345
#       - POSTGRES_HOST_AUTH_METHOD="scram-sha-256\nhost replication all 0.0.0.0/0 md5"
#       - POSTGRES_INITDB_ARGS="--auth-host=scram-sha-256"
        
#   db_repl_image:
#     networks:
#       - botnet
#     build: ./replication
#     ports:
#       - '5433:5432'
#     volumes:
#       - repl-volume:/var/lib/postgresql/data:z
#     environment:
#       - POSTGRES_DB=bot_db
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=Qq12345
#     depends_on:
#       - db_image
# volumes:
#   #3 creates the named volume 'data-volume' 
#   data-volume:
#   repl-volume:

# networks:
#   botnet:
#     ipam:
#       config:
#         - subnet: 172.10.1.0/24

